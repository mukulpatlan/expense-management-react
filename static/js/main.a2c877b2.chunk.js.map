{"version":3,"sources":["components/UI/Card.js","components/Expense/ExpenseFilter/ExpenseFilter.js","components/Expense/ExpenseDate.js","components/Expense/ExpenseItem.js","components/Expense/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expense/ExpensesChart.js","components/Expense/Expenses.js","components/Expense/NewExpense/ExpenseForm.js","components/Expense/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","event","onSelectedYear","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValue","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","selectedYear","setSelectedYear","filteredExpenses","filter","item","toString","filterData","ExpenseForm","enteredTitle","setEnteredTitle","endteredAmt","setEnteredAmt","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","onCancel","type","min","step","onClick","NewExpense","showNewExpenseForm","setShowNewExpenseForm","_","enteredExpenseData","random","onSaveExpense","DUMMY_EXPENSES","App","setExpenses","prevExpense","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2c877b2.chunk.js","sourcesContent":["import './Card.css';\n\nfunction Card(props) {\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import './ExpenseFilter.css';\n\nconst ExpenseFilter = (props) => {\n    const expenseYearfilter = (event) => {\n        props.onSelectedYear(event.target.value);\n    }\n\n    return (\n        <div className='expenses-filter'>\n            <div className='expenses-filter__control'>\n                <label>Filter by year</label>\n                <select value={props.selected} onChange={expenseYearfilter}>\n                    <option value='2022'>2022</option>\n                    <option value='2021'>2021</option>\n                    <option value='2020'>2020</option>\n                    <option value='2019'>2019</option>\n                </select>\n            </div>\n        </div>\n    );\n}\n\nexport default ExpenseFilter;","import './ExpenseDate.css';\n\nfunction ExpenseDate(props) {\n    const month = props.date.toLocaleString('en-us', { month: 'long' });\n    const day = props.date.toLocaleString('en-us', { year: '2-digit' });\n    const year = props.date.getFullYear();\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__day\">{day}</div>\n        </div>\n    );\n}\n\nexport default ExpenseDate;","import Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\n\nfunction ExpenseItem(props) {\n    return (\n        <li>\n            <Card className='expense-item'>\n                <ExpenseDate date={props.date} />\n                <div className='expense-item__description'>\n                    <h2>{props.title}</h2>\n                    <div className='expense-item__price'>${props.amount}</div>\n                </div>\n            </Card>\n        </li>\n    );\n}\n\nexport default ExpenseItem;","import \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = props => {\n    if (!props.items.length) {\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\n    }\n\n    return <ul className=\"expenses-list\">\n        {props.items.map((expense) =>\n            <ExpenseItem\n                key={expense.id}\n                title={expense.title}\n                amount={expense.amount}\n                date={expense.date}\n            />\n        )}\n    </ul>;\n}\n\nexport default ExpensesList;","import './ChartBar.css';\n\nconst ChartBar = props => {\n    let barFillHeight = '0%';\n\n    if (props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n    }\n\n    return <div className=\"chart-bar\">\n        <div className=\"chart-bar__inner\">\n            <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\n        </div>\n        <div className=\"chart-bar__label\">\n            {props.label}\n        </div>\n    </div>\n}\n\nexport default ChartBar;","import './Chart.css'\nimport ChartBar from './ChartBar';\n\nconst Chart = props => {\n    const dataPointValue = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValue);\n    return <div className=\"chart\">\n        {props.dataPoints.map(dataPoints =>\n            <ChartBar value={dataPoints.value}\n                maxValue={totalMaximum}\n                label={dataPoints.label}\n                key={dataPoints.label}\n            />\n        )}\n    </div>\n}\n\nexport default Chart;","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = props => {\n    const chartDataPoints = [\n        { label: 'Jan', value: 0 },\n        { label: 'Feb', value: 0 },\n        { label: 'Mar', value: 0 },\n        { label: 'Apr', value: 0 },\n        { label: 'May', value: 0 },\n        { label: 'June', value: 0 },\n        { label: 'July', value: 0 },\n        { label: 'Aug', value: 0 },\n        { label: 'Sep', value: 0 },\n        { label: 'Oct', value: 0 },\n        { label: 'Nov', value: 0 },\n        { label: 'Dec', value: 0 },\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n    return <Chart dataPoints={chartDataPoints} />\n}\n\nexport default ExpensesChart;","import { useState } from 'react';\n\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpenseFilter from './ExpenseFilter/ExpenseFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\n\nconst Expenses = (props) => {\n    const [selectedYear, setSelectedYear] = useState('2020');\n\n    const filterYear = (filterData) => {\n        setSelectedYear(filterData);\n    };\n\n    const filteredExpenses = props.expenses.filter(item => item.date.getFullYear().toString() === selectedYear);\n\n    return (\n        <Card className=\"expenses\">\n            <ExpenseFilter selected={selectedYear} onSelectedYear={filterYear} />\n            <ExpensesChart expenses={filteredExpenses} />\n            <ExpensesList items={filteredExpenses} />\n        </Card>\n    );\n}\n\nexport default Expenses;","import { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [endteredAmt, setEnteredAmt] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value)\n    }\n\n    const amtChangeHandler = (event) => {\n        setEnteredAmt(event.target.value)\n    }\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value)\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        const expenseData = {\n            title: enteredTitle,\n            amount: +endteredAmt,\n            date: new Date(enteredDate)\n        }\n        props.onSaveExpenseData(expenseData);\n        setEnteredTitle('');\n        setEnteredAmt('');\n        setEnteredDate('');\n        props.onCancel();\n    }\n\n    return <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n                <label>Title</label>\n                <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Amount</label>\n                <input type=\"number\" min=\"0.01\" step=\"0.01\" value={endteredAmt} onChange={amtChangeHandler} />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Date</label>\n                <input type=\"date\" value={enteredDate} onChange={dateChangeHandler} />\n            </div>\n        </div>\n        <div className=\"new-expense__actions\">\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n            <button type=\"submit\">Add Expense</button>\n        </div>\n    </form>\n}\n\nexport default ExpenseForm;","import './NewExpense.css';\nimport ExpenseForm from \"./ExpenseForm\";\nimport { useState } from 'react';\n\nconst NewExpense = (props) => {\n    const [showNewExpenseForm, setShowNewExpenseForm] = useState(false);\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        };\n        props.onSaveExpense(expenseData);\n    }\n\n    const addExpenseHander = _ => {\n        setShowNewExpenseForm(true);\n    }\n\n    const cancelExpenseHandler = _ => {\n        setShowNewExpenseForm(false);\n    }\n\n    return <div className=\"new-expense\">\n        {!showNewExpenseForm && <button onClick={addExpenseHander}>Add New Expense</button>}\n        {showNewExpenseForm && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={cancelExpenseHandler} />}\n    </div>;\n}\n\nexport default NewExpense;","import { useState } from 'react';\nimport Expenses from './components/Expense/Expenses';\nimport NewExpense from './components/Expense/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpense) => {\n      return [expense, ...prevExpense];\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onSaveExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}